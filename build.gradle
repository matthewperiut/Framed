plugins {
	id 'fabric-loom' version '0.7-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven
	{
		name = "Fabric"
		url = "https://maven.fabricmc.net/"
	}
	maven
	{
		name = "Cotton"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven
	{
		name = "dblsaiko"
		url = "https://maven.dblsaiko.net/"
	}
	maven
	{
		name = "Terraformers"
		url = "https://maven.shedaniel.me/"
	}
	maven
	{
		name = "Haven King"
		url = "https://hephaestus.dev/release"
	}
	maven
	{
		url "https://cursemaven.com"
		content
		{
			includeGroup "curse.maven"
		}
	}
	maven
	{
		name = "CurseForge"
		url = "https://minecraft.curseforge.com/api/maven"
	}
	maven
	{
		name = "JitPack"
		url = "https://jitpack.io/"
	}
}

dependencies {
	// optional dev env annotation support
	compileOnly "org.apiguardian:apiguardian-api:1.0.0"
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi ("grondag:frex-${project.mc_tag}:${project.frex_version}") { transitive = false}
	include "grondag:frex-${project.mc_tag}:${project.frex_version}"

	modImplementation ("grondag:jmx-${project.mc_tag}:${project.jmx_version}") { transitive = false}
	include "grondag:jmx-${project.mc_tag}:${project.jmx_version}"

	//modCompileOnly "grondag:canvas-${project.mc_tag}-${project.mc_version_short}:${project.canvas_version}" //1.17 weirdness remove mc_version_short later
	//modCompileOnly "grondag:canvas-${project.mc_tag}:${project.canvas_version}"
	//modCompileOnly "me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}"

	modImplementation include("io.github.cottonmc:LibGui:${project.libgui_version}+${project.minecraft_version}")

	//modImplementation "dev.hephaestus:conrad:${project.conrad_version}"
	//include "dev.hephaestus:conrad:${project.conrad_version}"


}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	//it.options.release = 8
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = targetVersion
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
